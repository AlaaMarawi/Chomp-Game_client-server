/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game;

import static game.BasicClient.cSocket;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author alaam
 */
class myButton extends JButton {

    public boolean isPressed;
    int x;
    int y;

    public myButton(int x, int y) {
        super();

        this.setPreferredSize(new Dimension(30, 30));
        this.setBackground(Color.RED);  //DARK_GRAY
        this.isPressed = false;
        this.x = x;
        this.y = y;

    }

}

public class Game extends javax.swing.JFrame {

    public static Game ThisGame; //static variable to reach frame components

    static int turn = -1;  //-1: not started or finished,0: rival,1: mine

    /**
     * Creates new form Game
     */
    static myButton[][] tiles;// 2D list of tiles as MyButton

    public Game() {
        initComponents();
        tiles = new myButton[12][12];//initiate list
        //  panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createLineBorder(Color.black, 4));
        panel.setLayout(new GridLayout(12, 12));
        panel.setPreferredSize(new Dimension(450, 450));

        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 12; j++) {
                myButton newBtn = new myButton(i, j);
                tiles[i][j] = newBtn;

                //set action listener of every button(tile):
                newBtn.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        //System.out.println(e.getSource().getClass()); //>> MyButtun class

                        if (turn == 1) { //if it is my turn :

                            if (!((myButton) e.getSource()).isPressed) {
                                scan_eat(((myButton) e.getSource()).x, ((myButton) e.getSource()).y);//eat all right,left squares
                                //send to server the pressed button's koordinate:
                                Message pressedBtn = new Message(Message.Message_Type.Pressed);
                                pressedBtn.content = ((myButton) e.getSource()).x + "," + ((myButton) e.getSource()).y;
                                try {
                                    BasicClient.cOutStream.writeObject(pressedBtn);
                                } catch (IOException ex) {
                                    Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                turn = 0;//now its rival's turn
                                lbl_turn.setText("RIVAL");
                                if (((myButton) e.getSource()).x == 0 && ((myButton) e.getSource()).y == 0) {//if you eat last quare
                                    //game over!
                                    System.out.println("Game Over " + txt_myname.getText() + " !");
                                    EndGame();
                                }
                            }
                        }
                    }
                });
                panel.add(tiles[i][j]); //add new tile to the panel
            }
        }
        tiles[0][0].setBackground(Color.YELLOW);//poisoned quare
        tiles[11][11].setBackground(Color.BLUE);//my start place
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbl_servermsg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_myname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_rivalname = new javax.swing.JTextField();
        btn_connect = new javax.swing.JButton();
        lbl_rivalStatus = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_turn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 503, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );

        jLabel1.setText("Server message:");

        lbl_servermsg.setText("not connected");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Enter Your Name");

        txt_myname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Rival Name");
        jLabel3.setAlignmentX(btn_connect.getAlignmentX());

        txt_rivalname.setEditable(false);
        txt_rivalname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_rivalname.setAlignmentX(btn_connect.getAlignmentX());

        btn_connect.setText("Connect");
        btn_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_connectActionPerformed(evt);
            }
        });

        lbl_rivalStatus.setText("not connected");
        lbl_rivalStatus.setAlignmentX(btn_connect.getAlignmentX());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Turn :");

        lbl_turn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_turn.setForeground(new java.awt.Color(153, 0, 0));
        lbl_turn.setText("none");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_turn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_servermsg, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_myname, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_connect, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_rivalname)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_rivalStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_connect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_myname, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_rivalname))
                    .addComponent(lbl_rivalStatus, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(lbl_turn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbl_servermsg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_connectActionPerformed
        // TODO add your handling code here:
        BasicClient.Start("127.0.0.1", 5000); //start connection by local adres and port 5000
        txt_myname.setEditable(false);

    }//GEN-LAST:event_btn_connectActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // when close the window -> disconnect
        if (btn_connect.isEnabled()) { //no connection has been set
            return;
        }
        Message disconnMsg = new Message(Message.Message_Type.Disconnect);
        try {
            BasicClient.cOutStream.writeObject(disconnMsg);//send disconnect message to server 
            BasicClient.cSocket.close();//close my socket
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void newGame() {
        //reset panel buttons to normal status (red,unpressed)
        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 12; j++) {
                ((myButton) tiles[i][j]).isPressed = false;
                tiles[i][j].setBackground(Color.red);

            }
        }
        tiles[0][0].setBackground(Color.YELLOW);
        tiles[11][11].setBackground(Color.BLUE);
        turn = -1; //reset turn to no one
        lbl_turn.setText("None");
        lbl_servermsg.setText("Connected, Waiting for rival");
        lbl_rivalStatus.setText("not connected");//untill rival connect or search for another rival
        txt_rivalname.setText("");

    }

    public void EndGame() {
        //send congraduation to rival:
        turn = -1;
        Message endmsg = new Message(Message.Message_Type.End);
        try {
            BasicClient.cOutStream.writeObject(endmsg);
        } catch (IOException ex) {
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
        }

        // show option panel (game over! ,new game?)->cancel/OK
        Object[] options = {"Cancel", "OK"};
        int selectedValue = JOptionPane.showOptionDialog(panel, "Game Over " + txt_myname.getText() + " !\nNew Game?", "Game Over", JOptionPane.YES_NO_OPTION,
                JOptionPane.INFORMATION_MESSAGE, null, options, options[1]);

        //behave depending on option panel selection:
        if (selectedValue == 1) {//if ok presseed-> i will play again
            newGame();
            Message newStart = new Message(Message.Message_Type.Start);//start new game(search for a pair)
            try {
                BasicClient.cOutStream.writeObject(newStart);
            } catch (IOException ex) {
                Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public static void youWon() {//rival ate poisoned quare
        turn = -1;
        //option panel ->you won!,  new game? cancel/OK
        Object[] options = {"Cancel", "OK"};
        int selected = JOptionPane.showOptionDialog(panel, "You WON !\nNew Game ?", "You Won", JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE, null, options, options[1]);
        if (selected == 0) {//if cancel pressed
            return;
        } else {// if ok pressed : open new game, search for a rival
            newGame();
            Message newStart = new Message(Message.Message_Type.Start);//start new game(search for a pair)
            try {
                BasicClient.cOutStream.writeObject(newStart);
            } catch (IOException ex) {
                Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    public static void rivalPress(String koordnt) {//reflect rival press on my screen
        String xy[] = koordnt.split(","); // split comming koord. (x,y) to x and y
        int x = Integer.parseInt(xy[0]);
        int y = Integer.parseInt(xy[1]);
        turn = 1;//then make it my turn
        lbl_turn.setText("YOU");
        //eat all right bottom squares of rival pressed square
        for (int i = x; i < 12; i++) {
            for (int j = y; j < 12; j++) {
                if (!((myButton) tiles[i][j]).isPressed) {
                    ((myButton) tiles[i][j]).isPressed = true;
                    tiles[i][j].setBackground(Color.DARK_GRAY);
                }
            }
        }

    }

    public void scan_eat(int x, int y) {//eat all right bottom quare of my pressed square
        for (int i = x; i < 12; i++) {
            for (int j = y; j < 12; j++) {
                if (!((myButton) tiles[i][j]).isPressed) {
                    ((myButton) tiles[i][j]).isPressed = true;
                    tiles[i][j].setBackground(Color.DARK_GRAY);
                }
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btn_connect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel lbl_rivalStatus;
    public static javax.swing.JLabel lbl_servermsg;
    public static javax.swing.JLabel lbl_turn;
    public static javax.swing.JPanel panel;
    public static javax.swing.JTextField txt_myname;
    public static javax.swing.JTextField txt_rivalname;
    // End of variables declaration//GEN-END:variables
}
